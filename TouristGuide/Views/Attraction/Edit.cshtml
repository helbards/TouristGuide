@model TouristGuide.Models.Attraction

@{
    ViewBag.Title = Model.Name + " - Edit";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/tiny_mce/tiny_mce.js")" type="text/javascript"></script>
<script type="text/javascript">
    tinyMCE.init({
        mode: "specific_textareas",
        editor_selector: "TinyMCE",
        theme: "advanced"
    });

    function UpdateText() {
        var text = tinyMCE.get('Description').getContent();
        $('#Description').html(text);
    }

    function addImgInput() {
        $('.editor-field-images').append("<input type='file' name='photo' />");
    }

    function delImgInput() {
        $('.editor-field-images input').last().remove();
    }
</script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Details</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description, new { @class = "TinyMCE" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>
    </fieldset>
    
    <fieldset>
        <legend>Location</legend>
            
            @Html.HiddenFor(model => model.Coordinates.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Coordinates.Latitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Coordinates.Latitude)
            @Html.ValidationMessageFor(model => model.Coordinates.Latitude)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Coordinates.Longitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Coordinates.Longitude)
            @Html.ValidationMessageFor(model => model.Coordinates.Longitude)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Country)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Country.ID, new SelectList(ViewBag.Countries, "Value", "Text", Model.Country.ID))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address.Region)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address.Region)
            @Html.ValidationMessageFor(model => model.Address.Region)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Address.City)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address.City)
            @Html.ValidationMessageFor(model => model.Address.City)
        </div>        

        <div class="editor-label">
            @Html.LabelFor(model => model.Address.Street)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address.Street)
            @Html.ValidationMessageFor(model => model.Address.Street)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address.BuildingNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address.BuildingNumber)
            @Html.ValidationMessageFor(model => model.Address.BuildingNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AttractionType)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.AttractionType.ID, new SelectList(ViewBag.AttractionTypes, "Value", "Text", Model.AttractionType.ID))
        </div>

    </fieldset>
    
    <fieldset>
        <legend>Photos and Video</legend>
        
        <div class="editor-field-images">
            <input type="file" name="photo" />
        </div>
        <input type="button" value=" + " onclick="addImgInput()" /><input type="button" value=" - " onclick="delImgInput()" />

        <div class="editor-label">
            @Html.LabelFor(model => model.Video)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Video)
            @Html.ValidationMessageFor(model => model.Video)
        </div>
    </fieldset>

        <p>
            <input type="submit" value="Save" onclick="UpdateText()" />
        </p>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
