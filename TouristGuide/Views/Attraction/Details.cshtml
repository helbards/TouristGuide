@model TouristGuide.Models.Attraction
@using TouristGuide.Models;

@{
    ViewBag.Title = Model.Name;
}

<link href='jquery.rating.css' type="text/css" rel="stylesheet"/>

@Html.ActionLink(Model.Country.Name, "Details", "Country", new { id = Model.Country.ID}, null) 
@if(Model.Address.Region != null)
{
    <text>/</text>
    @Model.Address.Region;
    
}
@if(Model.Address.City != null)
{
    <text>/</text>
    @Model.Address.City;
}

<div class="post">
	@if (Request.IsAuthenticated && HttpContext.Current.User.IsInRole("admin"))
 {
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id = Model.ID }) |
            @Html.ActionLink("Go back to attractions' index", "Index")
        </p>
 }

    <p>@Html.Raw(Model.Description)</p>   
<div class="post-address">
<ul>
    <li><b>Avg. rating:</b> @String.Format("{0:0.00}",Model.AvgRating)</li>
    <li><b>Region:</b> @Model.Address.Region</li>
    <li><b>City:</b> @Model.Address.City</li>
    <li><b>Street:</b> @Model.Address.Street @Model.Address.BuildingNumber</li>
</ul>
</div>
    			
@if (Model.Images.Count() > 0)
{
    <h3>Images</h3>
    <div class="post-images">
        <ul class="thumbs noscript">
            @for (int i = 0; i < Model.Images.Count(); ++i)
            {   
                <li>
		            <a class="thumb" href="@Url.Content("~/Content/AttractionImages/" + Model.Images[i].FileName)" title="Image #@i">
			            <img src="@Url.Content("~/Content/AttractionImages/" + Model.Images[i].FileName)" alt="Image #@i" />
		            </a>
	            </li>
            }
        </ul>
    </div>
}
@if (Model.Video != null)
{
    <h3>Video</h3>
    <div class="post-video">
        <object style="height: 340px; width: 560px">
        <param name="movie" value="@Model.Video">
        <param name="allowFullScreen" value="true">
        <param name="allowScriptAccess" value="always">
        <embed src="@Model.Video" type="application/x-shockwave-flash" allowfullscreen="true" allowScriptAccess="always" width="560" height="340">
        </object>
    </div>
}

    <h3>Reviews</h3>
    @if (Model.Reviews.Count == 0)
    {
        <div class="review">
            <p>No reviews.</p>
        </div>
    }
    @foreach (var item in Model.Reviews)
    {
        <div class="review">
            <p><b>Author: </b>@item.Author</p>
            <p><b>Date: </b>@String.Format("{0:d} ({0:HH}:{0:mm})", item.Date)</p>
            <p><b>Rating: </b>@item.Rating</p>
            <p>@item.Text</p>
            @if (Request.IsAuthenticated && HttpContext.Current.User.IsInRole("admin") || HttpContext.Current.User.Identity.Name == item.Author)
            {
                <p>
                    @Html.ActionLink("Edit", "ReviewEdit", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "ReviewDelete", new { id = item.ID })
                </p>
            }
        </div>
    }
    @if (Request.IsAuthenticated)
    {
        using (Html.BeginForm("ReviewCreate", "Attraction"))
        {
            @Html.ValidationSummary(true)
            <fieldset>
                <legend>Add review</legend>
                @Html.Hidden("Author", Context.User.Identity.Name)
                @Html.Hidden("AttractionID", Model.ID)
                <div class="editor-label">
                    Rating (1-10)
                </div>
                <div class="editor-field">
                    <input class="text-box single-line" data-val="true" data-val-range="Rating scale: 1-10" data-val-range-max="10" data-val-range-min="1" id="Rating" name="Rating" type="text" value="" />
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Description)
                </div>
                <div class="editor-field">
                    <textarea rows="5" cols="10" class="text-box multi-line" data-val="true" data-val-required="The Text field is required." id="Text" name="Text"></textarea>
                    <span class="field-validation-valid" data-valmsg-for="Text" data-valmsg-replace="true"/>
                </div>
                <p>
                    <input type="submit" value="Send" />
                </p>
            </fieldset>
        }
    }
    else
    {
        <br />
        @Html.ActionLink("Log on to add review", "LogOn", "Account", new { returnUrl = Request.RawUrl }, null)
    }

</div>